<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// This file was automatically generated by CppWinRT.Builders
#include <winrt/<#= _type.GetNamespace() #>.h>
#include <winrt/formatters/helpers.h>

template<>
constexpr std::wstring_view std::formatter<<#= Helpers.GetCppTypeName(_type) #>, wchar_t>::to_string(const <#= Helpers.GetCppTypeName(_type) #>& value)
{
    switch (value)
    {
    <# foreach (var value in _type.GetFields()) { #>
    case <#= Helpers.GetCppTypeName(_type) #>::<#= value.GetName() #>:
            return L"<#= value.GetName() #>";
    <# } #>
    default:
            return L"Unknown";
    }
}