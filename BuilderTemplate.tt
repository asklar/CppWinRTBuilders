<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".h" #>
// This file was automatically generated by CppWinRT.Builders
#include <winrt/<#= _type.GetNamespace() #>.h>

namespace winrt::<#= _type.GetNamespace().Replace(".", "::") #>::builders {
struct <#= _type.GetName() #> : <#= GetCppTypeName(_type) #> {
  using super = <#= GetCppTypeName(_type) #>;
<#
var setters = GetAllSetters(_type);
foreach (var setter in setters) {
#>
  // setter: <#= setter.GetName() #> (from <#= setter.DeclaringType.GetFullName() #>)
  const <#= _type.GetName() #>& <#= setter.GetName() #>(<#= GetCppTypeName(setter.GetPropertyType()) #> const& value) const {
    super::<#= setter.GetName() #>(value);
    return *this;
  }
<#
}
#>
};
}